lua_package_path '/usr/lib/chaos/?.lua;;';

server {

    listen 80;
    server_name localhost;


    location /get_chaos {
        internal;
        root /usr/lib/chaos;
        sendfile on;
        try_files /config.txt =404;
    }

     access_by_lua_block {
        -- local file = io.open('/usr/lib/chaos/config.txt', 'r')
        -- chaos.CHAOS = file:read()
        -- io.close(file)

        local chaos  = require "chaos"
        local res = ngx.location.capture('/get_chaos')
        chaos.CHAOS = tostring(res.body)

        ngx.log(ngx.ERR, 'Chaos: ' .. chaos.CHAOS)

        if chaos.CHAOS  == nil then
            ngx.log(ngx.ERR, "No chaos")
            return
        end
        if chaos.CHAOS  ==  "latency" then
            ngx.log(ngx.ERR, "Latency")
            ngx.sleep(4000 / 1000)
            return
        end
        if chaos.CHAOS  == "reject" then
            ngx.log(ngx.ERR, "Reject")
            ngx.status = 500
            ngx.header['Content-Type'] = 'application/json'
            ngx.say('Reject 500')
            return ngx.exit(500)
        end
     }

    location / {
        proxy_pass http://api:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}